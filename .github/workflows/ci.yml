name: ci

on:
  push:
  pull_request:
    branches:
    - main

defaults:
  run:
    shell: bash

env:
  LANG: en_US.utf-8
  LC_ALL: en_US.utf-8
  PYTHONIOENCODING: UTF-8

jobs:

  quality:

    runs-on: ubuntu-latest

    steps:
    - name: Install Nix
      uses: cachix/install-nix-action@v24

    - name: Setup Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v7

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Nix Format Check
      run: nix fmt -- . --check

    - name: Set up Python
      run: uv python install

    - name: Install the project
      run: |
        uv sync --locked --all-extras

    - name: Lint with Ruff
      run: |
        uv run ruff format --check

    - name: Check with Ruff
      run: |
        uv run ruff check --output-format=github

    - name: Type check with pyright
      run: |
        uv run pyright
      continue-on-error: true

  test:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version:
        - "3.11"
        - "3.12"
        - "3.13"
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install the project
      run: |
        uv sync --locked --all-extras

    - name: Test with pytest
      run: |
        uv run pytest
